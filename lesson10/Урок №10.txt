		Урок №10 arrays 3

00:00:00 Вступ
00:01:00 Задачка (передача декількох параметрів в 1 функцію)



00:16:00 повторення
	 ПРодовження теми масиви
00:19:00 Створення масиву на основі іншого
	00:22:00 Array.from(array) або [...array]- копіювання масива
	00:26:00 масиви на основі інших + модифікація
	00:29:00 map
	00:32:00 коли який краще використовувати

	00:33:00 приклад використання
		00:36:00 ЗАдача  Дано масив цін. Створити новий масив додавши 20% ( * 1.2).
		00:41:00 ЗАдача  Дано масив років народження працівників (усі народились 1 січня). Створити масив з кількістю років (2023 - year)
		00:45:00 ЗАдача  Дано масив вартості товару у доларах. Створити масив цін у гривнях (*currentCourse)
		00:47:00 Задача.Дано масив імен працівників. Сформувати новий масив, який складається з перших літер імен.
		00:50:00 ЗАдача Дано масив вартості товару. Створити масив цін, де до цін >100 додано 50



00:54:00 arr.at[-1] - доступ до останнього елемента у масиві
00:59:00 pop - видалить останній елемент ( можна привласнити значення елемента)
01:01:00 arr.lenght = 3- зміна довжини масиву (всі елемнети по за новим значенням видаляються)
01:02:00 arr.unshift(значення) - додавання елементу в самий перед
01:04:00 arr.shift(значення)  видалення першого елементу масиву ( можна привласнити значення елемента)

01:06:00 приклади
 додавання і вилучення довільних елементів 
01:14:00 arr.splice(початкова позиція, 0, нові значення через кому) - додавання значення  
01:16:00 / 01:28:00  arr.splice(початкова позиція, кількість елементів для видалення) -  вилучення  елементів 
	01:18:00 приклад  (вставка)
	01:21:00 приклад (видалення)
	01:24:00 приклад (видалення і вставка)

01:27:00 delete arr[що видалити] - видалення (повертає undefined)

01:28:30 arr.slice (початок, кінець )  - копіювання частини масиву
	01:33:00 приклад (копіювання)

01:36:00 arr.indexOf(значення пошуку, початок пошуку) пошук позиції першого знайденого елементу у масиві (+ функція indexOf)
	01:44:00 Задача (пошук, копіювання)
	01:50:00 Задача  (пошук, копіювання)
	01:51:00 Задача  (пошук, копіювання)

01:54:00 arr.findIndex((el, ind, arr) => умова)) та findLastIndex Задача  (пошук відповідних з умовою)
	01:54:00  Задача  (пошук, умова)
	01:58:00  Задача  (пошук, умова)


02:00:00  arr.find((el, ind, arr) => умова))  / findLast
02:01:00 includes (true / false)
	02:02:00 Задача  (пошук першого елемента з умовою)
	02:04:00 Задача (пошук останнього елемента з умовою)
	02:05:30 Задача (пошук includes)

02:08:25 reduce Акумулювання
let sum = arr.reduce((prevAgregateValue, el, ind, arr) => nextAgregateValue) - результат обчислень)
	02:14:00 Задача (сума)
	02:18:00 Задача (добуток)
	02:19:00 Задача (добуток відємних)
	02:22:00 Задача (суму парних елементів)
  02:24:00 Задача (кількість 7 в масиві) 
  02:27:00 Задача (максимальний елемент)
  02:29:00 Задача (максимальний серед  відємних )
  02:29:00 Задача (максимальний серед  відємних )
  02:31:00 Задача (кількість додатніх)

02:32:00 reduceRight Акумулювання з кінця
let sum = arr.reduceRight((prevAgregateValue, el, ind, arr) => nextAgregateValue) - результат обчислень)

02:33:20 filter - фільтрація, повертає новий масив з елементами які відповідають умові
let newArr = arr.filter(( el, ind, arr) => умова)
	02:35:00 Задача (filter )
	02:37:00 Задача (filter )
	02:38:00 Задача (filter) 


!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	02:40:00 Задача (filter)  

Відповідність (every, some -  )
02:43:00 every- перевірка елементів на відповідність умові(всі), (true / false)
 let newArr = arr.every(( el, ind, arr) => умова) 
 some  перевірка елементів на відповідність умові(хочаб один)  (true / false)
 let newArr = arr.some(( el, ind, arr) => умова) 
	02:45:00 Задача(some)
	02:46:00 Задача(some, every)


!!!!!!!!!!!!!!!!!!
02:50:00 Сортування (упорядкування) - перетворення у стрінгу або числа

	02:56:00 приклад (sort числа- зростання) варіанти
	arr.sort((a, b) => a - b) - зростання
	03:01:00 приклад (sort числа- спадання) варіанти
	arr.sort((a, b) => b - a)  - спадання

	03:03:00 приклад (sort слова - зростання) 
	03:04:00 приклад (sort слова - зростання) 
	03:06:00 приклад (sort числа парні, непарні) варіанти
arr.sort((num1, num2) => (num1 % 2) - (num2 % 2 !== 0))

	03:11:00 reverse - перевертає у зворотню сторону
	03:11:00 concat - об'єднує масиви

	03:12:00 .join("вид розділювача ") - перетворює у стрінгу  
	.split("вид розділювача ") - розділення, перетворює у масив
